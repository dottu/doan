{"version":3,"sources":["bookServices.js"],"names":["_lodash","_interopRequireDefault","require","_constant","_sequelize","db","_interopRequireWildcard","cache","_stringHelpers","cacheTime","createBook","data","regeneratorRuntime","async","_context","prev","next","loaibookId","abrupt","error","bookRequestCheck","loai_bookId","removeTagHtml","image","imageRequire","title","titleRequire","author","authorId","cost","costRequire","awrap","books","create","sent","stop","getBook","keySearch","pageBook","where","offsets","keyCache","cacheData","_args2","arguments","_context2","length","undefined","status","xoaDau","_defineProperty","Op","substring","console","log","BOOK_LIMIT","get","include","requied","limit","order","pages","Math","ceil","count","current","set","searchbook","search","_args3","_context3","findAndCountAll","attributes","and","startsWith","q","getbooks","joinbook","_context4","findAll","bookid","infobook","_context5","findOne","objwarehouse","_context6","warehouses","upsoluongton","obj","_context7","update","soluongton","bookId","upsoluongdat","a","_context8","soluongdat","model","sales","bookcarts","userId","sale","_context9","Upsale","_context10","namesale","createGiamgia","giamgia","_context11","magiamgia","getbookadmin","book","_args12","_context12","loaibooks","offset","getinfobook","createSale"],"mappings":"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","file":"bookServices.min.js","sourcesContent":["\nimport _ from 'lodash'\n\nimport { BOOK_LIMIT,bookRequestCheck, loaibookRequestCheck } from '../config/constant'\nimport { Op } from 'sequelize'\nimport * as db from '../database/models'\nimport * as cache from '../cache'\nimport { xoaDau , removeTagHtml, removeJsScript, checkNameValid } from '../utilities/stringHelpers'\n// import multer from 'multer'\nconst cacheTime = 3600\n\n\n\nconst createBook = async (data)=>{\n    if(!data.loaibookId){\n        return { error : bookRequestCheck.loai_bookId}\n    }\n    data.loaibookId = removeTagHtml(data.loaibookId)\n    if(!data.image){\n        return { error : bookRequestCheck.imageRequire }\n    }\n    data.image = data.image\n    if(!data.title){\n        return { error : bookRequestCheck.titleRequire }\n    }\n    data.title = removeTagHtml(data.title)\n    if(!data.author){\n        return { error : bookRequestCheck.authorId }\n    }\n    data.author = removeTagHtml(data.author)\n    if(!data.cost){\n        return { error : bookRequestCheck.costRequire }\n    }\n    data.cost = removeTagHtml(data.cost)\n\n    return await db.books.create(data)\n}\n\nconst getBook = async (keySearch=false, pageBook =1,data) =>{\n    // const finbook = db.books.findOne({\n    //     limit : BOOK_LIMIT\n    // })\n    // return finbook\n    let where = {\n        title: data,\n        status : 'publish',\n    }\n    if(keySearch) {\n        keySearch = removeTagHtml((xoaDau(keySearch), ' '))\n        where.title = {\n            [Op.substring]: removeTagHtml(keySearch)\n        }\n    }\n    console.log('search',data)\n    if(!pageBook){\n        pageBook =1\n    }\n    const offsets = (pageBook - 1)*BOOK_LIMIT\n\n    const keyCache = '__book_search_keysearch_'+keySearch+'_page_'+pageBook+'_offset_'+offsets\n    console.log('keycache', keyCache)\n    const cacheData = await cache.get(keyCache, true)\n    console.log('cacheData', cacheData)\n    if(cacheData){\n        return cacheData\n    }\n    const books = await db.books.findAndCountAll({\n        // attributes: ['id','loaibookId','image', 'title', 'status', 'author','cost' ,'createdAt', 'updatedAt'],\n\n        where: {\n            // [Op.or]:{\n                status:where.status,\n                // title: {\n                //     [Op.startsWith]: '%'+where.title\n                // }\n            // }\n        },\n        include : {\n            model: db.sales,\n            requied : true\n        },\n        limit: BOOK_LIMIT,\n        offset: offsets,\n        order: [\n          ['id', 'desc']\n        ],\n        // include: [\n        //   {\n        //     model: db.comment,\n        //     where: {\n        //       status: 'publish'\n        //     },\n        //     limit: COMMENT_SUB_LIMIT\n        //   }\n        // ]\n    })\n    books.pages = Math.ceil(books.count/BOOK_LIMIT)\n    books.current = pageBook\n    cache.set(keyCache, books, cacheTime, true)\n    console.log('page', pageBook)\n    \n    // const searchbook = await db.books.findAndCountAll({\n    //     attributes: ['id','loaibookId','image', 'title', 'status', 'author','cost' ,'createdAt', 'updatedAt'],\n    //     where : {\n    //         title: {\n    //             [Op.startsWith]: '%'+where.title\n    //         }\n    //     },\n    //     limit : BOOK_LIMIT,\n    //     offset: offsets,\n    // })\n  \n  return books;\n}\n\n//Search  \nconst searchbook = async (data,pageBook =1) =>{\n    console.log('data', data)\n    // const offsets = (pageBook - 1)*BOOK_LIMIT\n    const search =  await db.books.findAndCountAll({\n        attributes: ['id','loaibookId','image', 'title', 'status', 'author','cost' ,'createdAt', 'updatedAt'],\n        where :{\n            [Op.and]:{\n                status : 'publish',\n                title :{\n                    [Op.startsWith]: '%'+data.q\n                }\n            }\n        },\n        // limit: BOOK_LIMIT,\n        // offset: offsets\n    })\n    // search.pages = Math.ceil(search.count/BOOK_LIMIT)\n    // search.current = pageBook\n    return search;\n}\n\n//Get gia tri de view ra man Home\nconst getbooks = async () =>{\n    const joinbook = db.books.findAll({\n    })\n    return joinbook;\n}\nconst getinfobook = async (bookid) =>{\n    const infobook = await db.books.findOne({\n        where: {\n            id: bookid\n        }\n    })\n    return infobook\n}\n\n//Create Warehouse\nconst createWarehouse = async (objwarehouse) =>{\n    console.log('warehouse', objwarehouse)\n    return await db.warehouses.create(objwarehouse)\n}\n\n//Update Warehouse\nconst upsoluongton = async (obj) =>{\n    console.log('upsoluongton',obj)\n    return await db.warehouses.update(\n        {\n            soluongton : obj.soluongton\n        },\n        {\n            where :{\n                bookId : obj.bookId\n            }\n        }\n    )\n}\n\n//Update BookCarts sop luong \nconst upsoluongdat = async (obj) =>{\n    console.log('obj', obj.soluongdat)\n    let a = obj.soluongdat +1\n    const upbookcart = await db.bookcarts.update(\n        {\n            soluongdat : a\n        },\n        {\n            where : {\n                [Op.and]:[{\n                    bookId : obj.bookId,\n                    userId : obj.userId\n                }                    \n                ]\n            }\n        }\n    )\n}\n\n//Create sale\nconst createSale = async(sale) =>{\n    console.log('createo day', sale)\n    return await db.sales.create(sale)\n}\n// Update sale \nconst Upsale = async (data)=>{\n    console.log(data)\n    return await db.sales.update(\n        {\n            namesale: data.namesale,\n            sale: data.sale\n        },\n        {\n            where :{\n                bookId : data.bookId\n            }\n        }\n    )\n}\n\n//Create Magiamgia \nconst createGiamgia = async(giamgia)=>{\n    console.log('create giamgia ', giamgia)\n    return await db.magiamgia.create(giamgia)\n}\n\n//Create bookSale \n// const createbookSale = async(booksale) =>{\n//     return await db.booksales.create(booksale)\n// }\n\nconst getbookadmin = async(keySearch=false, pageBook=1,data) =>{\n    const offsets = (pageBook - 1)*BOOK_LIMIT\n    console.log(\"offsets\", offsets)\n    const keyCache = '__book_search_keysearch_'+keySearch+'_page_'+pageBook+'_offset_'+offsets\n    console.log('keycache', keyCache)\n    const cacheData = await cache.get(keyCache, true)\n    console.log('cacheData', cacheData)\n\n    const book = await db.loaibooks.findAndCountAll({\n        include : {\n            model : db.books,\n            requied: true,\n        },\n        limit: BOOK_LIMIT,\n        offset : offsets,\n        order :[\n            ['id', 'desc']\n        ]\n    })\n    book.pages = Math.ceil(book.count/BOOK_LIMIT)\n    book.current = pageBook\n    return book\n}\n\nexport default{\n    createBook,\n    getBook,\n    getbooks,\n    getinfobook,\n    searchbook,\n    createWarehouse,\n    upsoluongton,\n    upsoluongdat,\n    createSale,\n    createGiamgia,\n    // createbookSale,\n    Upsale,\n    getbookadmin\n}\n"]}